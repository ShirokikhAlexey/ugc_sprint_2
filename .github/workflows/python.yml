# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [ 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 flake8-html mypy lxml
        pip install -r api_tests/requirements.txt
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - run: mkdir -p /tmp/flake8-html-report
    - run: mkdir -p /tmp/mypy-html-report

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --format=html --htmldir=/tmp/flake8-html-report
    
    - name: type check
      run: |
        mypy api/ --html-report /tmp/mypy-report --no-error-summary

    - uses: actions/upload-artifact@v2
      with:
        name: flake8-html-report
        path: /tmp/flake8-html-report/
    
    - uses: actions/upload-artifact@v2
      with:
        name: mypy-html-report
        path: /tmp/mypy-html-report

    - name: Test with pytest
      run: |
        PYTHONPATH="api/src" python -m pytest api_tests/functional
